{"version":3,"sources":["logo.svg","components/Header/Header.js","components/Menu/Menu.js","components/Button/Button.js","components/Today/Today.js","components/Tomorrow/Tomorrow.js","components/EntryForm/EntryForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","htmlFor","Component","Menu","_this$props","this","props","lock","theClass","menuheader","id1","dish1","id2","dish2","disabled","id","type","Button","buttonText","date","Date","weekDay","month","Today","getDay","getDate","getMonth","Menu_Menu_Menu","Button_Button_Button","tomorrow","getTime","Tomorrow","EntryForm","hidden","width","height","class","placeholder","required","App","defaultChecked","Header_Header_Header","Today_Today_Today","Tomorrow_Tomorrow","EntryForm_EntryForm_EntryForm","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5552ac4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f592a9d4.svg\";","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <div className=\"logo-wrapper\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <span className=\"logo-title\">obeder</span>\r\n                </div>\r\n                \r\n\r\n                <div className=\"checkbox-toggle\">\r\n                    <label htmlFor='choice' className=\"not-eat\">Не ем</label>\r\n                    <span className=\"choice\"></span>\r\n                    <label htmlFor='choice' className=\"checkbox-circle\"></label>\r\n                    <label htmlFor='choice' className=\"eat\">Ем</label>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Menu.css';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nexport default class Menu extends Component {\r\n    render() {\r\n        const{\r\n            lock,\r\n            theClass,\r\n            menuheader,\r\n            id1,\r\n            dish1,\r\n            id2,\r\n            dish2\r\n        } = this.props;\r\n        return (\r\n            <fieldset className={theClass} disabled={lock}>\r\n                <h4>{menuheader}</h4>\r\n                <ul className=\"menu__list\">\r\n                    <li className=\"menu__list-item\">\r\n                        <input id={id1} type=\"checkbox\" className=\"menu__checkbox_hidden\"></input>\r\n                        <label className=\"menu__checkbox mr-3\" htmlFor={id1}></label>\r\n                        <label className=\"menu__checkbox-label\" htmlFor={id1}>{dish1}</label>\r\n                    </li>\r\n                    <li className=\"menu__list-item\">\r\n                        <input id={id2} type=\"checkbox\" className=\"menu__checkbox_hidden\"></input>\r\n                        <label className=\"menu__checkbox mr-3\" htmlFor={id2} ></label>\r\n                        <label className=\"menu__checkbox-label\" htmlFor={id2}>{dish2}</label>\r\n                    </li>\r\n                </ul>\r\n            </fieldset>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nexport default class Button extends Component {\r\n    render() {\r\n        const{\r\n            type,\r\n            buttonText\r\n        } = this.props;\r\n        return (\r\n            <button type={type} className=\"btn btn-primary\">\r\n                {buttonText}\r\n            </button>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Today.css';\r\nimport Menu from \"../Menu/Menu\";\r\nimport Button from \"../Button/Button\";\r\n\r\n\r\nlet date = new Date();\r\nlet weekDay = [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \r\n\"Суббота\"];\r\nlet month = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \r\n\t\"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\" ];\r\n\r\nexport default class Today extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"blockTitle\">\r\n                    {weekDay[date.getDay()]},&nbsp;\r\n                    <span className=\"d-md-inline d-none\">сегодня,&nbsp;</span>\r\n                    {date.getDate()}&nbsp;\r\n                    {month[date.getMonth()]}\r\n                </h2>\r\n                <form className=\"menuWrapper\">\r\n                    <Menu theClass=\"menu span-3\" menuheader=\"Салаты\" id1=\"salad\" dish1=\"Нежный\" id2=\"vinegret\" dish2=\"Винегрет овощной со свежим горошком\"/>\r\n                    <Menu theClass=\"menu span-4\" menuheader=\"Мясо\"  id1=\"kupaty\" dish1=\"Купаты куптельные\" id2=\"sausages\" dish2=\"Сосиски немецкие с сыром, приправами, чесноком и базиликом\"/>\r\n                    <Menu theClass=\"menu span-4\" menuheader=\"Супы\" id1=\"borsh\" dish1=\"Борщ с галушками\" id2=\"shee\" dish2=\"Щи щецкие по щщам дающие на серьезных щщах\"  />\r\n                    <Menu theClass=\"menu span-3\" menuheader=\"Гарниры\" id1=\"reeze\" dish1=\"Рис-хуис\" id2=\"paste\" dish2=\"Макарохи\" />\r\n                    <Menu theClass=\"menu span-4\" menuheader=\"Вторые блюда\" id1=\"karbonara\" dish1=\"Уберкарбонара с соусом из усов шанхайского барса\" id2=\"ravioly\" dish2=\"Пельмени зачотные\" lock=\"disabled\"/>\r\n                    <div className=\"span-4\">\r\n                        <textarea className=\"restangle\"></textarea>\r\n                        <Button type=\"reset\" buttonText=\"Сбросить в дефолт!\" />\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Menu from \"../Menu/Menu\";\r\nimport Button from \"../Button/Button\";\r\n\r\n\r\nlet date = new Date();\r\nlet weekDay = [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"];\r\nlet month = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \r\n    \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\" ];\r\nvar tomorrow = new Date(date.getTime()+1000*60*60*24);\r\n\r\nexport default class Tomorrow extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pt-5\">\r\n                <h2 className=\"blockTitle\">\r\n                    {weekDay[tomorrow.getDay()]},&nbsp;\r\n                    <span className=\"d-md-inline d-none\">завтра,&nbsp;</span>\r\n                    {tomorrow.getDate()}&nbsp;\r\n                    {month[tomorrow.getMonth()]}\r\n                    \r\n                </h2>\r\n                <form className=\"menuWrapper\">\r\n                    <Menu theClass=\"menu span-3\" menuheader=\"Салаты\" id1=\"salad-t\" dish1=\"Нежный\" id2=\"vinegret-t\" dish2=\"Винегрет овощной со свежими овощами\" />\r\n                    <Menu theClass=\"menu span-4\" menuheader=\"Мясо\" id1=\"sausages-t\" dish1=\"Сосиски немецкие с сыром, приправами, чесноком и базиликом\" id2=\"kupaty-t\" dish2=\"Купаты куптельные\" />\r\n                    <Menu theClass=\"menu span-4\" menuheader=\"Супы\" id1=\"shee-t\" dish1=\"Щи щецкие по щщам дающие на серьезных щщах\" id2=\"borsh-t\" dish2=\"Борщ с галушками\" />\r\n                    <Menu theClass=\"menu span-3\" menuheader=\"Гарниры\" id1=\"paste-t\" dish1=\"Макарохи\" id2=\"reeze-t\" dish2=\"Рис-хуис\" lock=\"disabled\" />\r\n                    \r\n                    <Menu theClass=\"menu span-4\" menuheader=\"Вторые блюда\" id1=\"karbonara-t\" dish1=\"Уберкарбонара с соусом из усов шанхайского барса\" id2=\"ravioly-t\" dish2=\"Пельмени зачотные\" />\r\n                    <div className=\"span-4\">\r\n                        <div className=\"restangle\"></div>\r\n                        <Button type=\"reset\" buttonText=\"Сбросить в дефолт!\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport logo from \"../../logo.svg\";\r\nimport Button from \"../Button/Button\";\r\nimport \"./EntryForm.css\";\r\n\r\nexport default class EntryForm extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"EntryFormWrapper\" hidden>\r\n                <form className=\"form-signin\">\r\n                    <img src={logo} className=\"mb-3\" alt=\"logo\" width=\"160\" height=\"160\" />\r\n                    <h1 className=\"logo-title logo-title_mobile-form mb-5\">obeder</h1>\r\n                    <input type=\"email\" class=\"inputForm mb-3\" placeholder=\"Электропочта\" required ></input>\r\n                    <input type=\"password\" class=\"inputForm mb-5\" placeholder=\"Кодовое слово\" required ></input>\r\n                    <Button type=\"submit\" buttonText=\"Обедать!\" />\r\n                    <span className=\"entryFormInfo\">Крайне мелкий текст поясняющий магические особенности входа или регистрации</span>\r\n                </form>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Header from \"../src/components/Header/Header\";\r\nimport Today from \"../src/components/Today/Today\";\r\nimport Tomorrow from \"../src/components/Tomorrow/Tomorrow\";\r\nimport EntryForm from \"../src/components/EntryForm/EntryForm\";\r\nimport './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n// import { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <input id='choice' type=\"checkbox\" className=\"choice\" defaultChecked/>\r\n        <div className=\"mainWrapper\">\r\n          <Header />\r\n          <div className=\"pageWrapper px-3 mb-5\">\r\n            <div className=\"menuFormWrapper\">\r\n              <Today />\r\n              <Tomorrow />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <EntryForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n      families: ['Righteous:300,400,700', 'sans-serif', 'Roboto:300,400,700', 'sans-serif']\n    }\n});\n\nReactDOM.render(\n  <App />,\n  \tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}